analysis {

  messagebox {
    minNumBlocksInWhichToClaim = 120
    chargePerMessage = 1
    amountBuriedInMail = 1
  }

  homeDomain {
    identity = "cloughpenny"
    cpKey = "7PR-a1dO9ZZJ1QcFVPx2aiBtPRtKzeiiwDLGRNQyeTI"
    publicKey = ${analysis.homeDomain.cpKey}

    dns = "ec2-52-212-56-206.eu-west-1.compute.amazonaws.com"
    httpPort = 8075
    tcpPort = 8076
  }

  nodeId = "analysis"
  tag = "defaultTag"
  bootstrap = [${analysis.homeDomain.identity}":::"${analysis.homeDomain.publicKey} ]
  peers = [ ]
  minConfirms = 2
  production = true
  clientRefCacheSize = 5000

  bind {
    port = 6076
    bindAddress = "0.0.0.0"
    applicationName = "asado"
    maxNumConnections = 100
    connectionTimeout = 60
    localOnly = false
    connectionRetryIntervalSecs = 60
    appVersion = "1.0.0"
  }

  blockchain {
    inflationRatePerBlock = 1000
    spendDelayBlocks = 2
    maxTxPerBlock = 100
    maxBlockOpenSecs = 20
    maxSignatures = 8
    numBlocksCached = 9999999
  }

  upnp_hide {
    upnpGatewayTimeoutOpt = 5
    upnpDiscoverTimeoutOpt = 5
  }

  database {
    driver = "org.hsqldb.jdbc.JDBCDriver"
    user = "SA"
    pass = ""
    useShutdownHook = true
    maxPoolSize = 10
    freeBlobsEarly = true
    connectionProperties = ""
    cachePrepStmts = true
    prepStmtCacheSize = 250
    prepStmtCacheSqlLimit = 2048
    tableCacheSize = 100
    useServerPrepStmts = true
    createSql = [
      "CREATE TABLE IF NOT EXISTS blockchain (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1), height BIGINT NOT NULL, num_txs INT NOT NULL, prev_block BLOB NOT NULL, merkle_root BLOB NOT NULL, mine_dt BIGINT NOT NULL, PRIMARY KEY (height));",
      "CREATE TABLE IF NOT EXISTS utxo (txid VARCHAR(64) NOT NULL, indx INT NOT NULL, entry BLOB NOT NULL, PRIMARY KEY (txid, indx));",
      "CREATE TABLE IF NOT EXISTS analysis_header (id BIGINT, coinbase BIGINT, txCount BIGINT, txOutTotal BIGINT, txBlockCount BIGINT, timeBlockOpen BIGINT, state INTEGER, auditCount  INTEGER, PRIMARY KEY (id));"
    ]

    connection = "jdbc:hsqldb:file:"${datafolder}"sss-hsql-ledger-analysis"
  }
}
