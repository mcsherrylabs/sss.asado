node {

  messagebox {
    minNumBlocksInWhichToClaim = 120
    chargePerMessage = 0
    amountBuriedInMail = 1
  }

  homeDomain {
    nodeId = "cloughpenny"
    identity = ${node.homeDomain.nodeId}
    evePpublicKey = "nGowXM-iwwAENEDHe8Wfx_uzjmvB6Dvp8iz0Kb_aFFQ"
    alicePublicKey = "kJxvVRQhIOT-2gxtzaPDhJA0gVstbU_rJkEudZLr8R0"
    bobPublicKey = "DT5_DQctoZyRtCtywHv0mDUR15xCBCWiP3Hsen64aDU"

    publicKey = "7PR-a1dO9ZZJ1QcFVPx2aiBtPRtKzeiiwDLGRNQyeTI"

    dns = "ec2-52-213-151-142.eu-west-1.compute.amazonaws.com"
    dns_alice = "mcsherrylabs.com"
    dns_eve = "ec2-52-43-140-161.us-west-2.compute.amazonaws.com"
    dns_bob = "ec2-52-40-226-237.us-west-2.compute.amazonaws.com"

    aliceHttpPort = 8069
    aliceTcpPort = 7070

    httpPort = 8075
    tcpPort = 8076

    bobHttpPort = 8071
    bobTcpPort = 7071

    eveHttpPort = 8072
    eveTcpPort = 7072

  }

  bootstrap = [${node.homeDomain.identity}":::"${node.homeDomain.publicKey} ]
  peers = [ ]
  minConfirms = 1
  production = true
  clientRefCacheSize = 5000
  nodeId = "nobu"
  tag = "defaultTag"
  publicKey = "oRuTYEKLNykBYsP7llOWt1HQYYzjen0j-Z_aYOjIDkM"

  bind {
    port = 7076
    bindAddress = "0.0.0.0"
    applicationName = "asado"
    maxNumConnections = 100
    connectionTimeout = 60
    localOnly = false
    connectionRetryIntervalSecs = 60
    appVersion = "1.0.0"
  }

  blockchain {
    inflationRatePerBlock = 1000
    spendDelayBlocks = 2
    maxTxPerBlock = 100
    maxBlockOpenSecs = 600
    maxSignatures = 8
    numBlocksCached = 3
  }

  upnp_hide {
    upnpGatewayTimeoutOpt = 5
    upnpDiscoverTimeoutOpt = 5
  }

  database {
    driver = "org.hsqldb.jdbc.JDBCDriver"
    user = "SA"
    pass = ""
    useShutdownHook = true
    freeBlobsEarly = true
    connectionProperties = ""
    maxPoolSize = 10
    cachePrepStmts = true
    prepStmtCacheSize = 250
    prepStmtCacheSqlLimit = 2048
    tableCacheSize = 100
    useServerPrepStmts = true
    createSql = [
      "CREATE TABLE IF NOT EXISTS blockchain (id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1), height BIGINT NOT NULL, num_txs INT NOT NULL, prev_block BLOB NOT NULL, merkle_root BLOB NOT NULL, mine_dt BIGINT NOT NULL, PRIMARY KEY (height));",
      "CREATE TABLE IF NOT EXISTS utxo (txid VARCHAR(64) NOT NULL, indx INT NOT NULL, entry BLOB NOT NULL, PRIMARY KEY (txid, indx));"
    ]

    connection = "jdbc:hsqldb:file:"${datafolder}"sss-hsql-ledger-client"
  }
}
